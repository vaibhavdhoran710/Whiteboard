{"ast":null,"code":"var _jsxFileName = \"C:\\\\whiteboard-app\\\\frontend\\\\src\\\\components\\\\Whiteboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport Toolbar from './Toolbar';\nimport UserCursors from './UserCursors';\nimport './Whiteboard.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nfunction Whiteboard() {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const canvasRef = useRef(null);\n  const ctxRef = useRef(null);\n  const lastPos = useRef({\n    x: 0,\n    y: 0\n  }); // ✅ Fixed position storage\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [strokeColor, setStrokeColor] = useState('black');\n  const [strokeWidth, setStrokeWidth] = useState(2);\n  const [userCursors, setUserCursors] = useState({});\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    const ctx = canvas.getContext('2d');\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    ctxRef.current = ctx;\n    socket.emit('join-room', roomId);\n    socket.on('draw', ({\n      x0,\n      y0,\n      x1,\n      y1,\n      color,\n      width\n    }) => {\n      drawLine(x0, y0, x1, y1, color, width);\n    });\n    socket.on('clear-canvas', () => {\n      clearCanvas(false);\n    });\n    socket.on('cursor-move', ({\n      id,\n      x,\n      y\n    }) => {\n      setUserCursors(prev => ({\n        ...prev,\n        [id]: {\n          x,\n          y,\n          timestamp: Date.now()\n        }\n      }));\n    });\n    const interval = setInterval(() => {\n      const now = Date.now();\n      setUserCursors(prev => Object.fromEntries(Object.entries(prev).filter(([_, v]) => now - v.timestamp < 3000)));\n    }, 3000);\n    return () => clearInterval(interval);\n  }, [roomId]);\n  const startDrawing = ({\n    nativeEvent\n  }) => {\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    setIsDrawing(true);\n    lastPos.current = {\n      x: offsetX,\n      y: offsetY\n    }; // ✅ Set starting point\n  };\n  const finishDrawing = () => {\n    setIsDrawing(false);\n  };\n  const draw = ({\n    nativeEvent\n  }) => {\n    if (!isDrawing) return;\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    const {\n      x: lastX,\n      y: lastY\n    } = lastPos.current;\n    drawLine(lastX, lastY, offsetX, offsetY, strokeColor, strokeWidth);\n    socket.emit('draw', {\n      roomId,\n      x0: lastX,\n      y0: lastY,\n      x1: offsetX,\n      y1: offsetY,\n      color: strokeColor,\n      width: strokeWidth\n    });\n    lastPos.current = {\n      x: offsetX,\n      y: offsetY\n    }; // ✅ Update last position\n  };\n  const drawLine = (x0, y0, x1, y1, color, width) => {\n    const ctx = ctxRef.current;\n    ctx.strokeStyle = color;\n    ctx.lineWidth = width;\n    ctx.beginPath();\n    ctx.moveTo(x0, y0);\n    ctx.lineTo(x1, y1);\n    ctx.stroke();\n    ctx.closePath();\n  };\n  const clearCanvas = (emit = true) => {\n    const canvas = canvasRef.current;\n    ctxRef.current.clearRect(0, 0, canvas.width, canvas.height);\n    if (emit) socket.emit('clear-canvas', roomId);\n  };\n  const handleMouseMove = e => {\n    socket.emit('cursor-move', {\n      roomId,\n      id: socket.id,\n      x: e.clientX,\n      y: e.clientY\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      color: strokeColor,\n      setColor: setStrokeColor,\n      width: strokeWidth,\n      setWidth: setStrokeWidth,\n      onClear: () => clearCanvas(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      onMouseDown: startDrawing,\n      onMouseUp: finishDrawing,\n      onMouseMove: e => {\n        draw(e);\n        handleMouseMove(e);\n      },\n      className: \"whiteboard-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserCursors, {\n      cursors: userCursors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Whiteboard, \"a6UA2717OEFfw+NQ6CcsRNoPlM4=\", false, function () {\n  return [useParams];\n});\n_c = Whiteboard;\nexport default Whiteboard;\nvar _c;\n$RefreshReg$(_c, \"Whiteboard\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useParams","io","Toolbar","UserCursors","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","Whiteboard","_s","roomId","canvasRef","ctxRef","lastPos","x","y","isDrawing","setIsDrawing","strokeColor","setStrokeColor","strokeWidth","setStrokeWidth","userCursors","setUserCursors","canvas","current","width","window","innerWidth","height","innerHeight","ctx","getContext","lineCap","lineJoin","emit","on","x0","y0","x1","y1","color","drawLine","clearCanvas","id","prev","timestamp","Date","now","interval","setInterval","Object","fromEntries","entries","filter","_","v","clearInterval","startDrawing","nativeEvent","offsetX","offsetY","finishDrawing","draw","lastX","lastY","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","closePath","clearRect","handleMouseMove","e","clientX","clientY","children","setColor","setWidth","onClear","fileName","_jsxFileName","lineNumber","columnNumber","ref","onMouseDown","onMouseUp","onMouseMove","className","cursors","_c","$RefreshReg$"],"sources":["C:/whiteboard-app/frontend/src/components/Whiteboard.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport Toolbar from './Toolbar';\r\nimport UserCursors from './UserCursors';\r\nimport './Whiteboard.css';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nfunction Whiteboard() {\r\n  const { roomId } = useParams();\r\n  const canvasRef = useRef(null);\r\n  const ctxRef = useRef(null);\r\n  const lastPos = useRef({ x: 0, y: 0 }); // ✅ Fixed position storage\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [strokeColor, setStrokeColor] = useState('black');\r\n  const [strokeWidth, setStrokeWidth] = useState(2);\r\n  const [userCursors, setUserCursors] = useState({});\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.lineCap = 'round';\r\n    ctx.lineJoin = 'round';\r\n    ctxRef.current = ctx;\r\n\r\n    socket.emit('join-room', roomId);\r\n \r\n\r\n    \r\n    socket.on('draw', ({ x0, y0, x1, y1, color, width }) => {\r\n      drawLine(x0, y0, x1, y1, color, width);\r\n    });\r\n\r\n    socket.on('clear-canvas', () => {\r\n      clearCanvas(false);\r\n    });\r\n\r\n    socket.on('cursor-move', ({ id, x, y }) => {\r\n      setUserCursors((prev) => ({\r\n        ...prev,\r\n        [id]: { x, y, timestamp: Date.now() },\r\n      }));\r\n    });\r\n\r\n    const interval = setInterval(() => {\r\n      const now = Date.now();\r\n      setUserCursors((prev) =>\r\n        Object.fromEntries(\r\n          Object.entries(prev).filter(([_, v]) => now - v.timestamp < 3000)\r\n        )\r\n      );\r\n    }, 3000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [roomId]);\r\n\r\n  const startDrawing = ({ nativeEvent }) => {\r\n    const { offsetX, offsetY } = nativeEvent;\r\n    setIsDrawing(true);\r\n    lastPos.current = { x: offsetX, y: offsetY }; // ✅ Set starting point\r\n  };\r\n\r\n  const finishDrawing = () => {\r\n    setIsDrawing(false);\r\n  };\r\n\r\n  const draw = ({ nativeEvent }) => {\r\n    if (!isDrawing) return;\r\n    const { offsetX, offsetY } = nativeEvent;\r\n    const { x: lastX, y: lastY } = lastPos.current;\r\n\r\n    drawLine(lastX, lastY, offsetX, offsetY, strokeColor, strokeWidth);\r\n\r\n    socket.emit('draw', {\r\n      roomId,\r\n      x0: lastX,\r\n      y0: lastY,\r\n      x1: offsetX,\r\n      y1: offsetY,\r\n      color: strokeColor,\r\n      width: strokeWidth,\r\n    });\r\n\r\n    lastPos.current = { x: offsetX, y: offsetY }; // ✅ Update last position\r\n  };\r\n\r\n  const drawLine = (x0, y0, x1, y1, color, width) => {\r\n    const ctx = ctxRef.current;\r\n    ctx.strokeStyle = color;\r\n    ctx.lineWidth = width;\r\n    ctx.beginPath();\r\n    ctx.moveTo(x0, y0);\r\n    ctx.lineTo(x1, y1);\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n  };\r\n\r\n  const clearCanvas = (emit = true) => {\r\n    const canvas = canvasRef.current;\r\n    ctxRef.current.clearRect(0, 0, canvas.width, canvas.height);\r\n    if (emit) socket.emit('clear-canvas', roomId);\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    socket.emit('cursor-move', {\r\n      roomId,\r\n      id: socket.id,\r\n      x: e.clientX,\r\n      y: e.clientY,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Toolbar\r\n        color={strokeColor}\r\n        setColor={setStrokeColor}\r\n        width={strokeWidth}\r\n        setWidth={setStrokeWidth}\r\n        onClear={() => clearCanvas(true)}\r\n      />\r\n      <canvas\r\n        ref={canvasRef}\r\n        onMouseDown={startDrawing}\r\n        onMouseUp={finishDrawing}\r\n        onMouseMove={(e) => {\r\n          draw(e);\r\n          handleMouseMove(e);\r\n        }}\r\n        className=\"whiteboard-canvas\"\r\n      />\r\n      <UserCursors cursors={userCursors} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Whiteboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}