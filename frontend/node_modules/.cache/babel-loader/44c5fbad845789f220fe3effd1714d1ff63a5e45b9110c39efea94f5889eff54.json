{"ast":null,"code":"var _jsxFileName = \"C:\\\\whiteboard-app\\\\frontend\\\\src\\\\components\\\\Whiteboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport Toolbar from './Toolbar';\nimport UserCursors from './UserCursors';\nimport './Whiteboard.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nfunction Whiteboard() {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const canvasRef = useRef(null);\n  const ctxRef = useRef(null);\n  const lastPos = useRef({\n    x: 0,\n    y: 0\n  });\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [strokeColor, setStrokeColor] = useState('black');\n  const [strokeWidth, setStrokeWidth] = useState(2);\n  const [userCursors, setUserCursors] = useState({});\n  const drawLine = useCallback((x0, y0, x1, y1, color, width) => {\n    const ctx = ctxRef.current;\n    if (!ctx) return;\n    ctx.strokeStyle = color;\n    ctx.lineWidth = width;\n    ctx.beginPath();\n    ctx.moveTo(x0, y0);\n    ctx.lineTo(x1, y1);\n    ctx.stroke();\n    ctx.closePath();\n  }, []);\n  const clearCanvas = useCallback((emit = true) => {\n    const canvas = canvasRef.current;\n    if (!canvas || !ctxRef.current) return;\n    ctxRef.current.clearRect(0, 0, canvas.width, canvas.height);\n    if (emit) socket.emit('clear-canvas', roomId);\n  }, [roomId]);\n  const resizeCanvas = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const image = ctxRef.current.getImageData(0, 0, canvas.width, canvas.height);\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    ctxRef.current.putImageData(image, 0, 0);\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    const ctx = canvas.getContext('2d');\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    ctxRef.current = ctx;\n    socket.emit('join-room', {\n      roomId,\n      userId: socket.id\n    });\n    socket.emit('request-initial-data', roomId);\n    socket.on('draw-move', ({\n      stroke\n    }) => {\n      const {\n        x0,\n        y0,\n        x1,\n        y1,\n        color,\n        width\n      } = stroke;\n      drawLine(x0, y0, x1, y1, color, width);\n    });\n    socket.on('clear-canvas', () => {\n      clearCanvas(false);\n    });\n    socket.on('cursor-move', ({\n      id,\n      x,\n      y\n    }) => {\n      setUserCursors(prev => ({\n        ...prev,\n        [id]: {\n          x,\n          y,\n          timestamp: Date.now()\n        }\n      }));\n    });\n    socket.on('load-drawing', drawingData => {\n      clearCanvas(false);\n      drawingData.forEach(command => {\n        if (command.type === 'stroke') {\n          const {\n            x0,\n            y0,\n            x1,\n            y1,\n            color,\n            width\n          } = command.data;\n          drawLine(x0, y0, x1, y1, color, width);\n        } else if (command.type === 'clear') {\n          clearCanvas(false);\n        }\n      });\n    });\n    const interval = setInterval(() => {\n      const now = Date.now();\n      setUserCursors(prev => Object.fromEntries(Object.entries(prev).filter(([_, v]) => now - v.timestamp < 3000)));\n    }, 3000);\n    window.addEventListener('resize', resizeCanvas);\n    return () => {\n      clearInterval(interval);\n      window.removeEventListener('resize', resizeCanvas);\n      socket.off('draw-move');\n      socket.off('clear-canvas');\n      socket.off('cursor-move');\n      socket.off('load-drawing');\n      socket.emit('leave-room', {\n        roomId,\n        userId: socket.id\n      });\n    };\n  }, [roomId, drawLine, clearCanvas]);\n  const startDrawing = ({\n    nativeEvent\n  }) => {\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    setIsDrawing(true);\n    lastPos.current = {\n      x: offsetX,\n      y: offsetY\n    };\n  };\n  const finishDrawing = () => {\n    setIsDrawing(false);\n  };\n  const draw = ({\n    nativeEvent\n  }) => {\n    if (!isDrawing) return;\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    const {\n      x: lastX,\n      y: lastY\n    } = lastPos.current;\n    drawLine(lastX, lastY, offsetX, offsetY, strokeColor, strokeWidth);\n    socket.emit('draw-move', {\n      roomId,\n      stroke: {\n        x0: lastX,\n        y0: lastY,\n        x1: offsetX,\n        y1: offsetY,\n        color: strokeColor,\n        width: strokeWidth\n      }\n    });\n    lastPos.current = {\n      x: offsetX,\n      y: offsetY\n    };\n  };\n  const handleMouseMove = e => {\n    socket.emit('cursor-move', {\n      roomId,\n      id: socket.id,\n      x: e.clientX,\n      y: e.clientY\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      color: strokeColor,\n      setColor: setStrokeColor,\n      width: strokeWidth,\n      setWidth: setStrokeWidth,\n      onClear: () => clearCanvas(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      onMouseDown: startDrawing,\n      onMouseUp: finishDrawing,\n      onMouseLeave: finishDrawing,\n      onMouseMove: e => {\n        draw(e);\n        handleMouseMove(e);\n      },\n      className: \"whiteboard-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserCursors, {\n      cursors: userCursors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Whiteboard, \"6lDigN0LvqV8RerDolvTIsZ7jek=\", false, function () {\n  return [useParams];\n});\n_c = Whiteboard;\nexport default Whiteboard;\nvar _c;\n$RefreshReg$(_c, \"Whiteboard\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","useParams","io","Toolbar","UserCursors","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","Whiteboard","_s","roomId","canvasRef","ctxRef","lastPos","x","y","isDrawing","setIsDrawing","strokeColor","setStrokeColor","strokeWidth","setStrokeWidth","userCursors","setUserCursors","drawLine","x0","y0","x1","y1","color","width","ctx","current","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","closePath","clearCanvas","emit","canvas","clearRect","height","resizeCanvas","image","getImageData","window","innerWidth","innerHeight","putImageData","getContext","lineCap","lineJoin","userId","id","on","prev","timestamp","Date","now","drawingData","forEach","command","type","data","interval","setInterval","Object","fromEntries","entries","filter","_","v","addEventListener","clearInterval","removeEventListener","off","startDrawing","nativeEvent","offsetX","offsetY","finishDrawing","draw","lastX","lastY","handleMouseMove","e","clientX","clientY","children","setColor","setWidth","onClear","fileName","_jsxFileName","lineNumber","columnNumber","ref","onMouseDown","onMouseUp","onMouseLeave","onMouseMove","className","cursors","_c","$RefreshReg$"],"sources":["C:/whiteboard-app/frontend/src/components/Whiteboard.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport Toolbar from './Toolbar';\r\nimport UserCursors from './UserCursors';\r\nimport './Whiteboard.css';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nfunction Whiteboard() {\r\n  const { roomId } = useParams();\r\n  const canvasRef = useRef(null);\r\n  const ctxRef = useRef(null);\r\n  const lastPos = useRef({ x: 0, y: 0 });\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [strokeColor, setStrokeColor] = useState('black');\r\n  const [strokeWidth, setStrokeWidth] = useState(2);\r\n  const [userCursors, setUserCursors] = useState({});\r\n\r\n  const drawLine = useCallback((x0, y0, x1, y1, color, width) => {\r\n    const ctx = ctxRef.current;\r\n    if (!ctx) return;\r\n    ctx.strokeStyle = color;\r\n    ctx.lineWidth = width;\r\n    ctx.beginPath();\r\n    ctx.moveTo(x0, y0);\r\n    ctx.lineTo(x1, y1);\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n  }, []);\r\n\r\n  const clearCanvas = useCallback((emit = true) => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas || !ctxRef.current) return;\r\n    ctxRef.current.clearRect(0, 0, canvas.width, canvas.height);\r\n    if (emit) socket.emit('clear-canvas', roomId);\r\n  }, [roomId]);\r\n\r\n  const resizeCanvas = () => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n    const image = ctxRef.current.getImageData(0, 0, canvas.width, canvas.height);\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n    ctxRef.current.putImageData(image, 0, 0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.lineCap = 'round';\r\n    ctx.lineJoin = 'round';\r\n    ctxRef.current = ctx;\r\n\r\n    socket.emit('join-room', { roomId, userId: socket.id });\r\n    socket.emit('request-initial-data', roomId);\r\n\r\n    socket.on('draw-move', ({ stroke }) => {\r\n      const { x0, y0, x1, y1, color, width } = stroke;\r\n      drawLine(x0, y0, x1, y1, color, width);\r\n    });\r\n\r\n    socket.on('clear-canvas', () => {\r\n      clearCanvas(false);\r\n    });\r\n\r\n    socket.on('cursor-move', ({ id, x, y }) => {\r\n      setUserCursors((prev) => ({\r\n        ...prev,\r\n        [id]: { x, y, timestamp: Date.now() },\r\n      }));\r\n    });\r\n\r\n    socket.on('load-drawing', (drawingData) => {\r\n      clearCanvas(false);\r\n      drawingData.forEach((command) => {\r\n        if (command.type === 'stroke') {\r\n          const { x0, y0, x1, y1, color, width } = command.data;\r\n          drawLine(x0, y0, x1, y1, color, width);\r\n        } else if (command.type === 'clear') {\r\n          clearCanvas(false);\r\n        }\r\n      });\r\n    });\r\n\r\n    const interval = setInterval(() => {\r\n      const now = Date.now();\r\n      setUserCursors((prev) =>\r\n        Object.fromEntries(\r\n          Object.entries(prev).filter(([_, v]) => now - v.timestamp < 3000)\r\n        )\r\n      );\r\n    }, 3000);\r\n\r\n    window.addEventListener('resize', resizeCanvas);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n      window.removeEventListener('resize', resizeCanvas);\r\n      socket.off('draw-move');\r\n      socket.off('clear-canvas');\r\n      socket.off('cursor-move');\r\n      socket.off('load-drawing');\r\n      socket.emit('leave-room', { roomId, userId: socket.id });\r\n    };\r\n  }, [roomId, drawLine, clearCanvas]);\r\n\r\n  const startDrawing = ({ nativeEvent }) => {\r\n    const { offsetX, offsetY } = nativeEvent;\r\n    setIsDrawing(true);\r\n    lastPos.current = { x: offsetX, y: offsetY };\r\n  };\r\n\r\n  const finishDrawing = () => {\r\n    setIsDrawing(false);\r\n  };\r\n\r\n  const draw = ({ nativeEvent }) => {\r\n    if (!isDrawing) return;\r\n    const { offsetX, offsetY } = nativeEvent;\r\n    const { x: lastX, y: lastY } = lastPos.current;\r\n\r\n    drawLine(lastX, lastY, offsetX, offsetY, strokeColor, strokeWidth);\r\n\r\n    socket.emit('draw-move', {\r\n      roomId,\r\n      stroke: {\r\n        x0: lastX,\r\n        y0: lastY,\r\n        x1: offsetX,\r\n        y1: offsetY,\r\n        color: strokeColor,\r\n        width: strokeWidth,\r\n      },\r\n    });\r\n\r\n    lastPos.current = { x: offsetX, y: offsetY };\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    socket.emit('cursor-move', {\r\n      roomId,\r\n      id: socket.id,\r\n      x: e.clientX,\r\n      y: e.clientY,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Toolbar\r\n        color={strokeColor}\r\n        setColor={setStrokeColor}\r\n        width={strokeWidth}\r\n        setWidth={setStrokeWidth}\r\n        onClear={() => clearCanvas(true)}\r\n      />\r\n      <canvas\r\n        ref={canvasRef}\r\n        onMouseDown={startDrawing}\r\n        onMouseUp={finishDrawing}\r\n        onMouseLeave={finishDrawing}\r\n        onMouseMove={(e) => {\r\n          draw(e);\r\n          handleMouseMove(e);\r\n        }}\r\n        className=\"whiteboard-canvas\"\r\n      />\r\n      <UserCursors cursors={userCursors} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Whiteboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}